#!/usr/bin/perl

# get the keyboard characteristics
my @keyboard = &us_104;

# get the layout
my @layout;
my $desired = shift;
if( $desired eq 'dvorak' ) {
    @layout = &dvorak;
} else {
    @layout = &qwerty;
}

my %clicks; # map character to the number of keypresses needed
my %mm;     # map character to the distance (millimeters) the fingers must move
my $chars;  # the number of characters typed

# get some keyboard characteristics
my ($lshift, $rshift) = splice(@keyboard, 0, 2);
$mm{' '}     = shift @keyboard;
$clicks{' '} = 1;

# populate %clicks and %mm
while( my($shift, $d) = splice(@keyboard, 0, 2) ) {
    my($lc, $uc) = splice(@layout, 0, 2);

    $clicks{$lc} = 1;
    $clicks{$uc} = 2;

    $mm{$lc} = $d;
    $mm{$uc} = $d + ($shift eq 'l' ? $lshift : $rshift);
}


=item
use Data::Dumper;
print Dumper(\%clicks);
exit;
=cut

$keys = 0;
$dist = 0;

while(<>) {
    chomp;
    s/^\s*//;
    s/\s*$//;

    foreach(split //) {
        $chars++;

        if( exists $clicks{$_} ) {
            $keys += $clicks{$_};
        } else {
            warn "Clicks for '$_' was not found\n";
            $clicks{$_} = 0;
        }

        if( exists $mm{$_} ) {
            $dist += $mm{$_};
        } else {
            warn "Distance for '$_' was not found\n";
            $mm{$_} = 0;
        }
    }
}

# QWERTY
print "$desired:\n";
print "$chars characters\n";
print "$keys clicks\n";
print "$dist mm\n";
print "\n";
printf "%.1f mm/click\n", $dist/$keys;
printf "%.1f mm/char\n", $dist/$chars;
printf "%.2f clicks/char\n", $keys/$chars;
printf "%.3f Joules for key depression\n", $keys*.5*.003*.6;

sub us_104 {
    return (
        # distances to left and right shift and space(respectively)
        qw{
            15 30 0
        },
        # define the 12345 row
        qw{
            r 45
            r 35
            r 35
            r 35
            r 35
            r 30
            r 40
            l 35
            l 35
            l 35
            l 30
            l 30
            l 35
            l 45
        },
        # define the QWERTY row
        qw/
            r 15
            r 15
            r 15
            r 15
            r 15
            l 25
            l 15
            l 15
            l 15
            l 15
            l 15
            l 30
        /,
        # define the home row
        qw{
            r  0
            r  0
            r  0
            r  0
            r 15
            l 15
            l  0
            l  0
            l  0
            l  0
            l 15
        },
        # define the ZXCVB row
        qw{
            r 15
            r 15
            r 15
            r 15
            r 30
            l 15
            l 15
            l 15
            l 15
            l 15
        },
    );

}

sub qwerty {
    return (
        # define the 12345 row
        qw{
            ` ~
            1 !
            2 @
            3 #
            4 $
            5 %
            6 ^
            7 &
            8 *
            9 (
            0 )
            - _
            = +
            \ |
        },
        # define the QWERTY row
        qw/
            q  Q
            w  W
            e  E
            r  R
            t  T
            y  Y
            u  U
            i  I
            o  O
            p  P
            [  {
            ]  }
        /,
        # define the home row
        qw{
            a A
            s S
            d D
            f F
            g G
            h H
            j J
            k K
            l L
            ; :
            ' "
        },
        # define the ZXCVB row
        qw{
            z Z
            x X
            c C
            v V
            b B
            n N
            m M
            , <
            . >
            / ?
        },
    );
}

sub dvorak {
    return (
        # define the 12345 row
        qw/
            `  ~
            1  !
            2  @
            3  #
            4  $
            5  %
            6  ^
            7  &
            8  *
            9  (
            0  )
            [  {
            ]  }
            \\ |
        /,
        # define the ',.pYF row
        qw{
            ' "
            , <
            . >
            p P
            y Y
            f F
            g G
            c C
            r R
            l L
            / ?
            = +
        },
        # define the home row
        qw{
            a A
            o O
            e E
            u U
            i I
            d D
            h H
            t T
            n N
            s S
            - _
        },
        # define the ;QJKX row
        qw{
            ; :
            q Q
            j J
            k K
            x X
            b B
            m M
            w W
            v V
            z Z
        },
    );
}
